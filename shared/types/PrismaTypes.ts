//======================================================================
// Prisma Types
// Generated by prisma-generator-typescript-interfaces.
// Edited by PostTypeGen.ts to modify headers and field options.
// Do not edit directly!
//======================================================================

//======================================================================
// ENUMS
//======================================================================

export type UserRole = "USER" | "STAFF" | "ADMIN";

export const UserRoleKeys = {
  USER: "USER",
  STAFF: "STAFF",
  ADMIN: "ADMIN",
} satisfies Record<string, UserRole>;

export type OrderStatus =
  | "PENDING"
  | "PAID"
  | "SHIPPED"
  | "DELIVERED"
  | "CANCELLED"
  | "REFUNDED";

export const OrderStatusKeys = {
  PENDING: "PENDING",
  PAID: "PAID",
  SHIPPED: "SHIPPED",
  DELIVERED: "DELIVERED",
  CANCELLED: "CANCELLED",
  REFUNDED: "REFUNDED",
} satisfies Record<string, OrderStatus>;

export type TransactionStatus = "PENDING" | "PAID" | "REFUNDED" | "FAILED";

export const TransactionStatusKeys = {
  PENDING: "PENDING",
  PAID: "PAID",
  REFUNDED: "REFUNDED",
  FAILED: "FAILED",
} satisfies Record<string, TransactionStatus>;

export type PaymentMethod =
  | "CARD"
  | "STRIPE"
  | "PAYPAL"
  | "SQUARE"
  | "CASH"
  | "APPLE_PAY"
  | "GOOGLE_PAY"
  | "BANK_TRANSFER"
  | "AFTERPAY"
  | "KLARNA"
  | "BITCOIN"
  | "ETHEREUM"
  | "LITECOIN"
  | "OTHER_CRYPTO"
  | "OTHER";

export const PaymentMethodKeys = {
  CARD: "CARD",
  STRIPE: "STRIPE",
  PAYPAL: "PAYPAL",
  SQUARE: "SQUARE",
  CASH: "CASH",
  APPLE_PAY: "APPLE_PAY",
  GOOGLE_PAY: "GOOGLE_PAY",
  BANK_TRANSFER: "BANK_TRANSFER",
  AFTERPAY: "AFTERPAY",
  KLARNA: "KLARNA",
  BITCOIN: "BITCOIN",
  ETHEREUM: "ETHEREUM",
  LITECOIN: "LITECOIN",
  OTHER_CRYPTO: "OTHER_CRYPTO",
  OTHER: "OTHER",
} satisfies Record<string, PaymentMethod>;

export type ProductStatus = "ACTIVE" | "INACTIVE" | "DISCONTINUED";

export const ProductStatusKeys = {
  ACTIVE: "ACTIVE",
  INACTIVE: "INACTIVE",
  DISCONTINUED: "DISCONTINUED",
} satisfies Record<string, ProductStatus>;

export type ReviewStatus = "PENDING" | "APPROVED" | "REJECTED";

export const ReviewStatusKeys = {
  PENDING: "PENDING",
  APPROVED: "APPROVED",
  REJECTED: "REJECTED",
} satisfies Record<string, ReviewStatus>;

export type DiscountType = "PERCENTAGE" | "FIXED_AMOUNT";

export const DiscountTypeKeys = {
  PERCENTAGE: "PERCENTAGE",
  FIXED_AMOUNT: "FIXED_AMOUNT",
} satisfies Record<string, DiscountType>;

export type StockMovementType = "SALE" | "RESTOCK" | "ADJUSTMENT";

export const StockMovementTypeKeys = {
  SALE: "SALE",
  RESTOCK: "RESTOCK",
  ADJUSTMENT: "ADJUSTMENT",
} satisfies Record<string, StockMovementType>;

export type SystemSettingsScope = "SITE" | "ADMIN" | "ENGINE";

export const SystemSettingsScopeKeys = {
  SITE: "SITE",
  ADMIN: "ADMIN",
  ENGINE: "ENGINE",
} satisfies Record<string, SystemSettingsScope>;

//======================================================================
// USERS & AUTH
//======================================================================

export interface User {
  id?: string;
  email: string;
  passwordHash: string;
  firstName: string;
  lastName: string;
  phone?: string | null;
  role: UserRole;
  isVerified: boolean;
  lastLogin?: Date | null;
  failedLoginAttempts: number;
  cart?: Cart | null;
  settings?: JsonValue | null;
  createdAt?: Date;
  updatedAt?: Date;
  addresses?: Address[];
  paymentMethods?: UserPaymentMethod[];
  orders?: Order[];
  reviews?: ProductReview[];
  sessions?: Session[];
}

export interface UserPaymentMethod {
  id?: string;
  user?: User;
  userId?: string;
  type: PaymentMethod;
  last4: string;
  expiry: string;
  providerToken: string;
}

//======================================================================
// COLLECTIONS & CATEGORIES
//======================================================================

export interface Collection {
  id?: string;
  name: string;
  slug: string;
  description?: string | null;
  seoTitle?: string | null;
  seoKeywords?: string | null;
  images?: CollectionImageSet | null;
  createdAt?: Date;
  updatedAt?: Date;
  products?: Product[];
}

export interface Category {
  id?: string;
  name: string;
  slug: string;
  description?: string | null;
  seoTitle?: string | null;
  seoKeywords?: string | null;
  images?: CollectionImageSet | null;
  createdAt?: Date;
  updatedAt?: Date;
  products?: Product[];
}

export interface CollectionImageSet {
  id?: string;
  banner?: string | null;
  preview?: string | null;
  thumbnail?: string | null;
  collection?: Collection | null;
  collectionId?: string | null;
  category?: Category | null;
  categoryId?: string | null;
}

//======================================================================
// PRODUCTS
//======================================================================

export interface Product {
  id?: string;
  name: string;
  sku?: string | null;
  price: number;
  discount?: number | null;
  discountType?: DiscountType | null;
  description: string;
  stock?: number | null;
  reviewCount?: number | null;
  averageRating?: number | null;
  status: ProductStatus;
  dimensions?: ProductDimensions | null;
  tags?: ProductTag[];
  images?: ProductImageSet[];
  options?: ProductOption[];
  variants?: ProductVariant[];
  categories?: Category[];
  collections?: Collection[];
  stockMovements?: StockMovement[];
  reviews?: ProductReview[];
  createdAt?: Date;
  updatedAt?: Date;
  CartItem?: CartItem | null;
}

export interface ProductImageSet {
  id?: string;
  product?: Product;
  productId?: string;
  main: string;
  preview: string;
  thumbnail: string;
}

export interface ProductTag {
  id?: string;
  product?: Product;
  productId?: string;
  name: string;
  color?: string | null;
  textColor?: string | null;
}

export interface ProductOption {
  id?: string;
  product?: Product;
  productId?: string;
  name: string;
  values: string[];
}

export interface ProductVariant {
  id?: string;
  product?: Product;
  productId?: string;
  options: string[];
  price?: number | null;
  stock?: number | null;
  CartItem?: CartItem[];
}

export interface ProductDimensions {
  id?: string;
  product?: Product;
  productId?: string;
  weight?: number | null;
  length?: number | null;
  width?: number | null;
  height?: number | null;
}

export interface ProductReview {
  id?: string;
  user?: User;
  userId?: string;
  product?: Product;
  productId?: string;
  rating: number;
  comment: string;
  status: ReviewStatus;
  helpfulCount: number;
  createdAt?: Date;
  updatedAt?: Date;
}

export interface ProductTagPreset {
  id?: string;
  name: string;
  color?: string | null;
  textColor?: string | null;
}

export interface ProductOptionsPreset {
  id?: string;
  name: string;
  options: ProductOption[];
}

//======================================================================
// INVENTORY / STOCK
//======================================================================

export interface StockMovement {
  id?: string;
  product?: Product;
  productId?: string;
  quantity: number;
  type: StockMovementType;
  timestamp: Date;
  notes?: string | null;
}

//======================================================================
// ADDRESS & SHIPPING
//======================================================================

export interface Address {
  id?: string;
  name: string;
  company?: string | null;
  email: string;
  phone?: string | null;
  street1: string;
  street2?: string | null;
  city: string;
  state: string;
  postalCode: string;
  country: string;
  label?: string | null;
  createdAt?: Date;
  updatedAt?: Date;
  User?: User | null;
  userId?: string | null;
  Transaction?: Transaction | null;
  TransactionId?: string | null;
  ShippingInfos?: ShippingInfo[];
  FromShipments?: ShippingInfo[];
}

export interface ShippingInfo {
  id?: string;
  order?: Order;
  orderId?: string;
  address?: Address | null;
  addressId?: string | null;
  fromAddress?: Address | null;
  fromAddressId?: string | null;
  shipmentId?: string | null;
  tracking?: string | null;
  labelUrl?: string | null;
  carrier?: string | null;
  method?: string | null;
  parcel?: ParcelDimensions | null;
  cost?: number | null;
  status?: string | null;
  statusHistory?: ShippingStatusHistory[];
  createdAt?: Date;
  updatedAt?: Date;
}

export interface ParcelDimensions {
  id?: string;
  ShippingInfo?: ShippingInfo | null;
  ShippingInfoId?: string | null;
  weight?: number | null;
  length?: number | null;
  width?: number | null;
  height?: number | null;
}

export interface ShippingStatusHistory {
  id?: string;
  shippingInfo?: ShippingInfo;
  shippingInfoId?: string;
  status: string;
  timestamp: Date;
}

//======================================================================
// ORDERS & TRANSACTIONS
//======================================================================

export interface Order {
  id?: string;
  user?: User | null;
  userId?: string | null;
  status: OrderStatus;
  total: number;
  tax?: number | null;
  shippingCost?: number | null;
  transaction?: Transaction | null;
  shippingInfo?: ShippingInfo | null;
  items?: OrderItem[];
  statusHistory?: OrderStatusHistory[];
  invoices?: Invoice[];
  notes?: string | null;
  createdAt?: Date;
  updatedAt?: Date;
  shippingInfoId?: string | null;
}

export interface OrderItem {
  id?: string;
  order?: Order;
  orderId?: string;
  product: Product;
  variant?: ProductVariant | null;
  quantity: number;
  price: number;
}

export interface Transaction {
  id?: string;
  order?: Order;
  orderId?: string;
  billingAddress?: Address | null;
  amount: number;
  currency: string;
  method: PaymentMethod;
  status: TransactionStatus;
  gatewayResponse?: JsonValue | null;
}

export interface OrderStatusHistory {
  id?: string;
  order?: Order;
  orderId?: string;
  status: OrderStatus;
  timestamp: Date;
}

export interface Invoice {
  id?: string;
  order?: Order;
  orderId?: string;
  invoiceNumber: string;
  pdfUrl?: string | null;
  createdAt?: Date;
}

//======================================================================
// COUPONS
//======================================================================

export interface Coupon {
  id?: string;
  code: string;
  discountType: DiscountType;
  value: number;
  usageLimit?: number | null;
  expiresAt: Date;
  createdAt?: Date;
}

//======================================================================
// SESSIONS & CARTS
//======================================================================

export interface Session {
  id?: string;
  user?: User | null;
  userId?: string | null;
  token: string;
  ipAddress?: string | null;
  userAgent?: string | null;
  cart?: Cart | null;
  expiresAt: Date;
  createdAt?: Date;
  updatedAt?: Date;
}

export interface Cart {
  id?: string;
  session?: Session | null;
  sessionId?: string | null;
  user?: User | null;
  userId?: string | null;
  items?: CartItem[];
  subtotal: number;
  total: number;
  createdAt?: Date;
  updatedAt?: Date;
}

export interface CartItem {
  id?: string;
  cart?: Cart;
  cartId?: string;
  product?: Product;
  productId?: string;
  variant?: ProductVariant | null;
  variantId?: string | null;
  quantity: number;
  price: number;
  createdAt?: Date;
  updatedAt?: Date;
}

//======================================================================
// SETTINGS
//======================================================================

export interface SystemSettings {
  id?: string;
  scope: SystemSettingsScope;
  settings: JsonValue;
  createdAt?: Date;
  updatedAt?: Date;
}

type JsonValue =
  | string
  | number
  | boolean
  | { [key in string]?: JsonValue }
  | Array<JsonValue>
  | null;
